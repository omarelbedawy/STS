rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Enforces access control for user profiles.
     * @path /users/{userId}
     * @allow (create) User with UID 'user_abc' can create their own profile at /users/user_abc.
     * @allow (get) User with UID 'user_abc' can read their own profile at /users/user_abc.
     * @allow (update) User with UID 'user_abc' can update their own profile at /users/user_abc.
     * @allow (delete) User with UID 'user_abc' can delete their own profile at /users/user_abc.
     * @deny (create) User with UID 'user_xyz' cannot create a profile at /users/user_abc.
     * @deny (get) User with UID 'user_xyz' cannot read the profile at /users/user_abc.
     * @deny (update) User with UID 'user_xyz' cannot update the profile at /users/user_abc.
     * @deny (delete) User with UID 'user_xyz' cannot delete the profile at /users/user_abc.
     * @principle Enforces document ownership for all operations.
     */
    match /users/{userId} {
      function isOwner(userId) {
        return request.auth.uid == userId;
      }
      function isExistingOwner(userId) {
        return isOwner(userId) && exists(resource);
      }
      allow get: if isOwner(userId);
      allow list: if false;
      allow create: if isOwner(userId) && request.auth.token.email == request.resource.data.email;
      allow update: if isExistingOwner(userId) && request.auth.token.email == resource.data.email;
      allow delete: if isExistingOwner(userId);
    }

    /**
     * @description Allows public read access to classroom metadata but disallows modifications.
     * @path /classrooms/{classroomId}
     * @allow (get) Any user can read classroom metadata.
     * @allow (list) Any user can list classrooms.
     * @deny (create) No user can create classroom documents.
     * @deny (update) No user can update classroom documents.
     * @deny (delete) No user can delete classroom documents.
     * @principle Provides open read access while restricting write access to prevent unauthorized modifications.
     */
    match /classrooms/{classroomId} {
      allow get, list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Allows public read access to classroom schedules but disallows modifications.
     * @path /classrooms/{classroomId}/schedules/{scheduleId}
     * @allow (get) Any user can read classroom schedules.
     * @allow (list) Any user can list classroom schedules.
     * @deny (create) No user can create classroom schedule documents.
     * @deny (update) No user can update classroom schedule documents.
     * @deny (delete) No user can delete classroom schedule documents.
     * @principle Provides open read access while restricting write access to prevent unauthorized modifications.
     */
    match /classrooms/{classroomId}/schedules/{scheduleId} {
      allow get, list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Allows public read access to explanation commitments but disallows modifications.
     * @path /classrooms/{classroomId}/explanations/{explanationId}
     * @allow (get) Any user can read explanation commitments.
     * @allow (list) Any user can list explanation commitments.
     * @deny (create) No user can create explanation documents.
     * @deny (update) No user can update explanation documents.
     * @deny (delete) No user can delete explanation documents.
     * @principle Provides open read access while restricting write access to prevent unauthorized modifications.
     */
    match /classrooms/{classroomId}/explanations/{explanationId} {
      allow get, list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }
  }
  function isSignedIn() {
    return request.auth != null;
  }
}